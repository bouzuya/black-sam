// Generated by CoffeeScript 1.10.0
(function() {
  var commander, fs, getBaseNamePath, getCommand, getConfig, getDataFile, getDataTemplate, getDataTemplateForWeekday, getDataTemplateForWeekend, getMetaFile, getMetaTemplate, getTitle, moment, path, readMeta, writeData, writeMeta;

  fs = require('fs-extra');

  path = require('path');

  commander = require('commander-b');

  moment = require('moment');

  getBaseNamePath = function(dir, date) {
    var _, m, ref, y;
    ref = date.split('-'), y = ref[0], m = ref[1], _ = ref[2];
    return path.join(dir, y, m, date);
  };

  getCommand = function() {
    var program;
    program = commander('bbn');
    program.version(require('../package.json').version);
    program.command('new', 'create a new post').option('-d, --date <date>').option('-w, --weekend').action(function(options) {
      var config, data, dataFile, date, meta, metaFile, ts;
      if (options == null) {
        options = {};
      }
      config = getConfig();
      options.directory = config.directory || '/home/bouzuya/blog.bouzuya.net';
      ts = options.date ? options.date + 'T23:59:59+09:00' : null;
      date = moment.apply(null, ts != null ? [ts, 'YYYY-MM-DDThh:mm:ssZ'] : []);
      dataFile = getDataFile(options.directory, date.format('YYYY-MM-DD'));
      metaFile = getMetaFile(options.directory, date.format('YYYY-MM-DD'));
      if (fs.existsSync(dataFile)) {
        console.error("the post " + dataFile + " already exists");
        return 1;
      } else {
        meta = getMetaTemplate(date, options);
        data = getDataTemplate(date, options);
        writeMeta(metaFile, meta);
        writeData(dataFile, data);
        console.log(['create a new post', dataFile, metaFile].join('\n'));
        return 0;
      }
    });
    return program;
  };

  getConfig = function() {
    var configFile;
    configFile = path.join(process.env.HOME, '.bbn.json');
    if (fs.existsSync(configFile)) {
      return require(configFile);
    } else {
      return {};
    }
  };

  getDataFile = function(dir, date) {
    return getBaseNamePath(dir, date) + '.md';
  };

  getDataTemplate = function(m, options) {
    if (options.weekend) {
      return getDataTemplateForWeekend(m, options);
    } else {
      return getDataTemplateForWeekday(m, options);
    }
  };

  getDataTemplateForWeekday = function(m, options) {
    return '';
  };

  getDataTemplateForWeekend = function(m, options) {
    var posts;
    posts = [1, 2, 3, 4, 5, 6, 7].map(function(i) {
      return moment(m).subtract(i, 'days').format('YYYY-MM-DD');
    }).map(function(date) {
      return {
        date: date,
        title: getTitle(options.directory, date),
        url: "http://blog.bouzuya.net/" + (date.replace(/-/g, '/')) + "/"
      };
    });
    return "# 今週のふりかえり\n\n" + (posts.map(function(i) {
      return "- [" + i.date + " " + i.title + "][" + i.date + "]";
    }).join('\n'));
  };

  getMetaFile = function(dir, date) {
    return getBaseNamePath(dir, date) + '.json';
  };

  getMetaTemplate = function(m, _options) {
    return {
      pubdate: m.format(),
      title: '',
      tags: [''],
      minutes: 0
    };
  };

  getTitle = function(dir, date) {
    return readMeta(getMetaFile(dir, date)).title;
  };

  readMeta = function(file) {
    var data;
    data = fs.readFileSync(file, {
      encoding: 'utf8'
    });
    return JSON.parse(data);
  };

  writeData = function(file, data) {
    return fs.outputFileSync(file, data, {
      encoding: 'utf8'
    });
  };

  writeMeta = function(file, meta) {
    var data;
    data = JSON.stringify(meta, null, 2);
    return fs.outputFileSync(file, data, {
      encoding: 'utf8'
    });
  };

  module.exports = function() {
    var command;
    command = getCommand();
    return command.execute();
  };

}).call(this);
